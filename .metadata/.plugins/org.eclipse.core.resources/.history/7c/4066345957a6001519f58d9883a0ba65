package com.example.algorithm;
/**
 * 
 * 二分查找
 * 查找前数组必须有序
 * 
 * @author 北飞的候鸟
 *
 */
public class BinarySearch {
	
	public static int binarySearch(Integer[] srcArray, int des) {
	    
		int low = 0;
	    int high = srcArray.length - 1;

	    while ((low <= high) && (low <= srcArray.length - 1)
	            && (high <= srcArray.length - 1)) {
	        int middle = low + ((high - low) >> 1);
	        if (des == srcArray[middle]) {
	            return middle;
	        } else if (des < srcArray[middle]) {
	            high = middle - 1;
	        } else {
	            low = middle + 1;
	        }
	    }
	    return -1;
	}
	
	public static void main(String[] args) {
		
		int[] a =  {1,2,3,4,5,6,7,8,9};
		BinarySearch.binarySearch(a, 5);
	}

}
