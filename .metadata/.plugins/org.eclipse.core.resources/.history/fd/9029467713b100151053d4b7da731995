package com.example.testCallable;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

/**
 * 使用callAble创建线程
 * 
 * @author 北飞的候鸟
 *
 */
public class Test {

	public static void main(String[] args) {
		//创建线程
		ExecutorService exs = Executors.newFixedThreadPool(1);
		
		Race race = new Race();
		
		//获取值
		Future<Integer> resul = exs.submit(race);
		
		try {
			System.out.println(resul.get());
			
			exs.shutdown();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} catch (ExecutionException e) {
			e.printStackTrace();
		}
	}
	
}

class Race implements Callable<Integer>{
	
	private String name ;
	private int time;
	private boolean flag = true;
	private int step;
	
	public Race() {

	}

	public Race(String name) {

		this.name = name;
	
	}

	@Override
	public Integer call() throws Exception {
		return 1111;
	}
	
}
